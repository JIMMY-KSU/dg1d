#================================================================================
#
# Imports
#
#================================================================================
import unittest
import solution
import dg
import numpy as np
import numpy.testing as npt

#================================================================================
#
# Class definitions
#
#================================================================================
class SolutionTestCase(unittest.TestCase):
        """Tests for `solution.py`."""
        
        #================================================================================
        # collocate
        def test_collocate(self):
            """Is the collocation procedure correct?"""
            sol = solution.Solution('sinewave 10', 'advection', 3)
            sol.apply_ic()
            dgsolver = dg.DG(sol)
            ug = dgsolver.collocate(sol)

            npt.assert_array_almost_equal(ug, np.array([[ 0.17361699,  0.43839961, -0.88296246,  0.99026366, -0.7193178,  0.17361699,  0.43839961, -0.88296246,  0.99026366, -0.7193178 ],
                                                        [ 0.7375292,  -0.19973332, -0.4143539,   0.87017202, -0.993614,   0.7375292,  -0.19973332, -0.4143539,   0.87017202, -0.993614  ],
                                                        [ 0.993614,   -0.87017202,  0.4143539,   0.19973332, -0.7375292,  0.993614,   -0.87017202,  0.4143539,   0.19973332, -0.7375292 ],
                                                        [ 0.7193178,  -0.99026366,  0.88296246, -0.43839961, -0.17361699, 0.7193178,  -0.99026366,  0.88296246, -0.43839961, -0.17361699]]), decimal = 7)


            
if __name__ == '__main__':
    unittest.main()
                
